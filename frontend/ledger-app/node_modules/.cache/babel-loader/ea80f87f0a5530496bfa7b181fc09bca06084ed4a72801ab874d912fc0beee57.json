{"ast":null,"code":"var _jsxFileName = \"/Users/bromodachi/Development/degica_project/frontend/ledger-app/src/routes/LedgerDetail.tsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { LedgerEntry } from \"../model/LedgerEntry\";\nimport LedgerDetailTable from \"../components/LedgerDetailTable\";\nimport Button from '@mui/material/Button';\nimport { LedgerDetail } from \"../model/LedgerDetail\";\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LedgerDetailView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ledgerDetail: this.constLedger(),\n      already_called: false,\n      isLoading: false,\n      id: 0\n    };\n  }\n  constLedger() {\n    return new LedgerDetail(0, \"USD\", new Map(), []);\n  }\n  async getData(id) {\n    try {\n      this.setState({\n        isLoading: true\n      });\n      axiosRetry(axios, {\n        retries: 3\n      });\n      let response = await axios.get(\"http://localhost:8080/ledger/\" + id);\n      const ledgerJson = response.data;\n      const data = ledgerJson.ledgerEntries.map(value => {\n        return new LedgerEntry(value.amount, value.currency, value.is_credit, value.description, value.created_at);\n      });\n      const details = ledgerJson.ledger;\n      const ledgerInfo = new LedgerDetail(details.totalAmount, details.totalAmountInCurrency, details.currencyRates, data);\n      this.setState({\n        ledgerDetail: ledgerInfo,\n        isLoading: false\n      });\n    } catch (error) {\n      alert(\"We couldn't load the invoices. Please reload the page to try again\");\n      console.error(error);\n      this.setState({\n        invoices: [],\n        isLoading: false\n      });\n    }\n  }\n  componentDidMount() {\n    console.log(this.props);\n    console.log(this.props.params.id);\n    if (!this.state.already_called) {\n      this.getData(this.props.params.id).then(r => this.setState({\n        already_called: true\n      }));\n    }\n  }\n  getTotalAmount() {\n    return \"\" + this.state.ledgerDetail.totalAmountInCurrency + '$' + this.state.ledgerDetail.totalAmount;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n        sx: {\n          color: '#fff',\n          zIndex: theme => theme.zIndex.drawer + 1\n        },\n        open: this.state.isLoading,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"simple-header\",\n        children: \"My Ledger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"simple-entries\",\n        children: [\"Total Amount: \", this.getTotalAmount()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"simple-entries\",\n        children: [\"Total Entries: \", this.state.ledgerDetail.ledgerDetails.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        href: \"http://localhost:8080/invoices/download\",\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LedgerDetailTable, {\n        ledgerDetails: this.state.ledgerDetail.ledgerDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","axiosRetry","LedgerEntry","LedgerDetailTable","Button","LedgerDetail","Backdrop","CircularProgress","jsxDEV","_jsxDEV","LedgerDetailView","constructor","args","state","ledgerDetail","constLedger","already_called","isLoading","id","Map","getData","setState","retries","response","get","ledgerJson","data","ledgerEntries","map","value","amount","currency","is_credit","description","created_at","details","ledger","ledgerInfo","totalAmount","totalAmountInCurrency","currencyRates","error","alert","console","invoices","componentDidMount","log","props","params","then","r","getTotalAmount","render","children","sx","color","zIndex","theme","drawer","open","fileName","_jsxFileName","lineNumber","columnNumber","className","ledgerDetails","length","variant","href"],"sources":["/Users/bromodachi/Development/degica_project/frontend/ledger-app/src/routes/LedgerDetail.tsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport {LedgerEntry} from \"../model/LedgerEntry\";\nimport LedgerDetailTable from \"../components/LedgerDetailTable\";\nimport Button from '@mui/material/Button';\nimport {LedgerDetail} from \"../model/LedgerDetail\";\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {Route, Link, Routes, useParams} from 'react-router-dom';\n\n\nexport class LedgerDetailView extends Component {\n\n    constLedger(): LedgerDetail { return new LedgerDetail(0, \"USD\", new Map(), [])}\n\n    state = {\n        ledgerDetail: this.constLedger(),\n        already_called: false,\n        isLoading: false,\n        id: 0\n    }\n\n    async getData(id: string| undefined) {\n        try {\n            this.setState({\n                isLoading: true\n            });\n            axiosRetry(axios, { retries: 3});\n            let response = await axios.get(\"http://localhost:8080/ledger/\" + id);\n            const ledgerJson = response.data\n            const data = ledgerJson.ledgerEntries.map((value: any) => {\n                return new LedgerEntry(\n                    value.amount,\n                    value.currency,\n                    value.is_credit,\n                    value.description,\n                    value.created_at\n                );\n            });\n            const details = ledgerJson.ledger\n            const ledgerInfo = new LedgerDetail(\n                details.totalAmount,\n                details.totalAmountInCurrency,\n                details.currencyRates,\n                data\n            )\n            this.setState({\n                ledgerDetail: ledgerInfo,\n                isLoading: false\n            })\n        } catch (error) {\n            alert(\"We couldn't load the invoices. Please reload the page to try again\")\n            console.error(error)\n            this.setState({\n                invoices: [],\n                isLoading: false\n            });\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n        console.log(this.props.params.id)\n        if (!this.state.already_called) {\n            this.getData(this.props.params.id).then(r =>\n                this.setState(\n                    {\n                        already_called: true\n                    }\n                )\n            );\n        }\n    }\n\n    getTotalAmount(): String {\n        return \"\" + this.state.ledgerDetail.totalAmountInCurrency + '$' +  this.state.ledgerDetail.totalAmount\n    }\n\n    render() {\n        return (\n\n            <div>\n                <Backdrop\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                    open={this.state.isLoading}\n                >\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n                <p className=\"simple-header\">My Ledger</p>\n                <p className=\"simple-entries\">Total Amount: {this.getTotalAmount()}</p>\n                <p className=\"simple-entries\">Total Entries: {this.state.ledgerDetail.ledgerDetails.length}</p>\n                <Button variant=\"contained\" href=\"http://localhost:8080/invoices/download\">Download CSV</Button>\n                <LedgerDetailTable ledgerDetails={this.state.ledgerDetail.ledgerDetails}></LedgerDetailTable>\n            </div>\n        );\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}