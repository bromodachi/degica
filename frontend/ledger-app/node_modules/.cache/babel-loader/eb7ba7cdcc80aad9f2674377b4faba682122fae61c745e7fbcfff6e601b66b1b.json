{"ast":null,"code":"var _jsxFileName = \"/Users/bromodachi/Development/degica_project/frontend/ledger-app/src/components/LedgerDetailTable.tsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LedgerDetailTable({\n  ledgerDetails\n}) {\n  function formatToUtc(date) {\n    console.log(\"dateL: \" + date);\n    let toNumber = Number(date.toString());\n    if (isNaN(toNumber)) {\n      return toNumber;\n    } else {\n      const ans = dayjs.unix(toNumber).format('YYYY-MM-DD HH:mm:ss Z');\n      return dayjs.unix(toNumber / 1000).format('YYYY-MM-DD HH:mm:ss Z');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Datetime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: ledgerDetails.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: [row.currency, row.symbol, row.isRefund, row.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: formatToUtc(row.datetime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = LedgerDetailTable;\nvar _c;\n$RefreshReg$(_c, \"LedgerDetailTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","dayjs","jsxDEV","_jsxDEV","LedgerDetailTable","ledgerDetails","formatToUtc","date","console","log","toNumber","Number","toString","isNaN","ans","unix","format","component","children","sx","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","align","map","row","index","border","scope","currency","symbol","isRefund","amount","description","datetime","_c","$RefreshReg$"],"sources":["/Users/bromodachi/Development/degica_project/frontend/ledger-app/src/components/LedgerDetailTable.tsx"],"sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport {LedgerEntry} from \"../model/LedgerEntry\";\nimport dayjs from \"dayjs\";\n\ninterface LedgerDetailsProps {\n    ledgerDetails: LedgerEntry[];\n}\n\nexport default function LedgerDetailTable({ ledgerDetails }: LedgerDetailsProps) {\n    function formatToUtc(date: any) {\n        console.log(\"dateL: \" + date);\n        let toNumber = Number(date.toString());\n        if (isNaN(toNumber)) {\n            return toNumber\n        }\n        else {\n            const ans = dayjs.unix(toNumber).format('YYYY-MM-DD HH:mm:ss Z');\n            return dayjs.unix(toNumber / 1000).format('YYYY-MM-DD HH:mm:ss Z');\n        }\n    }\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Amount</TableCell>\n                        <TableCell align=\"left\">Description</TableCell>\n                        <TableCell align=\"left\">Datetime</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {ledgerDetails.map((row, index) => (\n                        <TableRow\n                            key={index}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.currency}{row.symbol}{row.isRefund}{row.amount}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.description}</TableCell>\n                            <TableCell align=\"left\">{formatToUtc(row.datetime)}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AAEvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,eAAe,SAASC,iBAAiBA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAC7E,SAASC,WAAWA,CAACC,IAAS,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,IAAI,CAAC;IAC7B,IAAIG,QAAQ,GAAGC,MAAM,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC;IACtC,IAAIC,KAAK,CAACH,QAAQ,CAAC,EAAE;MACjB,OAAOA,QAAQ;IACnB,CAAC,MACI;MACD,MAAMI,GAAG,GAAGb,KAAK,CAACc,IAAI,CAACL,QAAQ,CAAC,CAACM,MAAM,CAAC,uBAAuB,CAAC;MAChE,OAAOf,KAAK,CAACc,IAAI,CAACL,QAAQ,GAAG,IAAI,CAAC,CAACM,MAAM,CAAC,uBAAuB,CAAC;IACtE;EACJ;EACA,oBACIb,OAAA,CAACN,cAAc;IAACoB,SAAS,EAAEjB,KAAM;IAAAkB,QAAA,eAC7Bf,OAAA,CAACT,KAAK;MAACyB,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAC,cAAW,cAAc;MAAAF,QAAA,gBACnDf,OAAA,CAACL,SAAS;QAAAoB,QAAA,eACNf,OAAA,CAACJ,QAAQ;UAAAmB,QAAA,gBACLf,OAAA,CAACP,SAAS;YAAAsB,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC7BrB,OAAA,CAACP,SAAS;YAAC6B,KAAK,EAAC,MAAM;YAAAP,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,eAC/CrB,OAAA,CAACP,SAAS;YAAC6B,KAAK,EAAC,MAAM;YAAAP,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACZrB,OAAA,CAACR,SAAS;QAAAuB,QAAA,EACLb,aAAa,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC1BzB,OAAA,CAACJ,QAAQ;UAELoB,EAAE,EAAE;YAAE,kCAAkC,EAAE;cAAEU,MAAM,EAAE;YAAE;UAAE,CAAE;UAAAX,QAAA,gBAE1Df,OAAA,CAACP,SAAS;YAACqB,SAAS,EAAC,IAAI;YAACa,KAAK,EAAC,KAAK;YAAAZ,QAAA,GAChCS,GAAG,CAACI,QAAQ,EAAEJ,GAAG,CAACK,MAAM,EAAEL,GAAG,CAACM,QAAQ,EAAEN,GAAG,CAACO,MAAM;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACZrB,OAAA,CAACP,SAAS;YAAC6B,KAAK,EAAC,MAAM;YAAAP,QAAA,EAAES,GAAG,CAACQ;UAAW;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACrDrB,OAAA,CAACP,SAAS;YAAC6B,KAAK,EAAC,MAAM;YAAAP,QAAA,EAAEZ,WAAW,CAACqB,GAAG,CAACS,QAAQ;UAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA,GAP1DI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQJ,CACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEzB;AAACa,EAAA,GAvCuBjC,iBAAiB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}