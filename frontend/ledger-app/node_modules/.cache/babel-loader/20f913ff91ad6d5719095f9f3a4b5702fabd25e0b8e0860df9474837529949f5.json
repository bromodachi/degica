{"ast":null,"code":"export class LedgerEntry {\n  constructor(id, amount, currency, isCredit, description, createdAt) {\n    this.id = void 0;\n    this.amount = void 0;\n    this.currency = void 0;\n    this.isCredit = void 0;\n    this.description = void 0;\n    this.createdAt = void 0;\n    this.id = id;\n    this.amount = amount;\n    this.currency = currency;\n    this.isCredit = isCredit;\n    this.description = description;\n    this.createdAt = createdAt;\n  }\n  get symbol() {\n    if (this.currency === \"JPY\") {\n      return \"¥\";\n    } else if (this.currency === \"USD\") {\n      return \"$\";\n    } else if (this.currency === \"KRW\") {\n      return \"₩\";\n    } else {\n      return \"$\";\n    }\n  }\n  get isRefund() {\n    console.log(\"isCredit: \" + this.isCredit);\n    if (this.isCredit) {\n      return \"-\";\n    } else {\n      return \"\";\n    }\n  }\n}","map":{"version":3,"names":["LedgerEntry","constructor","id","amount","currency","isCredit","description","createdAt","symbol","isRefund","console","log"],"sources":["/Users/bromodachi/Development/degica_project/frontend/ledger-app/src/model/LedgerEntry.ts"],"sourcesContent":["export class LedgerEntry {\n    id: number\n    amount: string\n    currency: string\n    isCredit: boolean\n    description: string\n    createdAt: string\n\n    constructor(id: number, amount: string, currency: string, isCredit: boolean, description: string, createdAt: string) {\n        this.id = id\n        this.amount = amount;\n        this.currency = currency;\n        this.isCredit = isCredit;\n        this.description = description;\n        this.createdAt = createdAt;\n    }\n\n    get symbol(): string {\n        if (this.currency === \"JPY\") { return \"¥\"; }\n        else if (this.currency === \"USD\") {return \"$\"; }\n        else if (this.currency === \"KRW\") {return \"₩\"; }\n        else {\n            return \"$\";\n        }\n    }\n\n    get isRefund(): string {\n        console.log(\"isCredit: \" + this.isCredit)\n        if (this.isCredit) { return \"-\"; }\n        else { return  \"\"; }\n    }\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,CAAC;EAQrBC,WAAWA,CAACC,EAAU,EAAEC,MAAc,EAAEC,QAAgB,EAAEC,QAAiB,EAAEC,WAAmB,EAAEC,SAAiB,EAAE;IAAA,KAPrHL,EAAE;IAAA,KACFC,MAAM;IAAA,KACNC,QAAQ;IAAA,KACRC,QAAQ;IAAA,KACRC,WAAW;IAAA,KACXC,SAAS;IAGL,IAAI,CAACL,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC9B;EAEA,IAAIC,MAAMA,CAAA,EAAW;IACjB,IAAI,IAAI,CAACJ,QAAQ,KAAK,KAAK,EAAE;MAAE,OAAO,GAAG;IAAE,CAAC,MACvC,IAAI,IAAI,CAACA,QAAQ,KAAK,KAAK,EAAE;MAAC,OAAO,GAAG;IAAE,CAAC,MAC3C,IAAI,IAAI,CAACA,QAAQ,KAAK,KAAK,EAAE;MAAC,OAAO,GAAG;IAAE,CAAC,MAC3C;MACD,OAAO,GAAG;IACd;EACJ;EAEA,IAAIK,QAAQA,CAAA,EAAW;IACnBC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAG,IAAI,CAACN,QAAQ,CAAC;IACzC,IAAI,IAAI,CAACA,QAAQ,EAAE;MAAE,OAAO,GAAG;IAAE,CAAC,MAC7B;MAAE,OAAQ,EAAE;IAAE;EACvB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}