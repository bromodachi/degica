{"ast":null,"code":"var _jsxFileName = \"/Users/bromodachi/Development/degica_project/frontend/ledger-app/src/components/LedgerDetailView.tsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { LedgerDetail } from \"../model/LedgerDetail\";\nimport LedgerDetailTable from \"./LedgerDetailTable\";\nimport Button from '@mui/material/Button';\nimport { Ledger } from \"../model/Ledger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LedgerDetailView extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ledgerDetail: this.constLedger(),\n      already_called: false\n    };\n  }\n  constLedger() {\n    return new Ledger(0, \"USD\", new Map(), []);\n  }\n  async getData() {\n    try {\n      let response = await axios.get(\"http://localhost:8080/invoices\");\n      const ledgerJson = response.data;\n      const data = ledgerJson.ledgerDetail.map(value => {\n        return new LedgerDetail(value.amount, value.currency, value.is_credit, value.description, value.created_at);\n      });\n      const ledgerInfo = new Ledger(ledgerJson.totalAmount, ledgerJson.totalAmountInCurrency, ledgerJson.currencyRates, data);\n      this.setState({\n        ledgerDetail: ledgerInfo\n      });\n    } catch (error) {\n      alert(\"We couldn't load the invoices. Please \");\n      console.error(error);\n      this.setState({\n        invoices: []\n      });\n    }\n  }\n  componentDidMount() {\n    if (!this.state.already_called) {\n      this.getData().then(r => this.setState({\n        already_called: true\n      }));\n    }\n  }\n  getTotalAmount() {\n    return \"\" + this.state.ledgerDetail.totalAmountInCurrency + '$' + this.state.ledgerDetail.totalAmount;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"simple-header\",\n        children: \"My Ledger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"simple-entries\",\n        children: [\"Total Amount: \", this.getTotalAmount()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"simple-entries\",\n        children: [\"Total Entries: \", this.state.ledgerDetail.ledgerDetails.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        href: \"http://localhost:8080/invoices/download\",\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LedgerDetailTable, {\n        ledgerDetails: this.state.ledgerDetail.ledgerDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","LedgerDetail","LedgerDetailTable","Button","Ledger","jsxDEV","_jsxDEV","LedgerDetailView","constructor","args","state","ledgerDetail","constLedger","already_called","Map","getData","response","get","ledgerJson","data","map","value","amount","currency","is_credit","description","created_at","ledgerInfo","totalAmount","totalAmountInCurrency","currencyRates","setState","error","alert","console","invoices","componentDidMount","then","r","getTotalAmount","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ledgerDetails","length","variant","href"],"sources":["/Users/bromodachi/Development/degica_project/frontend/ledger-app/src/components/LedgerDetailView.tsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\nimport {LedgerDetail} from \"../model/LedgerDetail\";\nimport LedgerDetailTable from \"./LedgerDetailTable\";\nimport Button from '@mui/material/Button';\nimport {Ledger} from \"../model/Ledger\";\n\nexport class LedgerDetailView extends Component {\n\n    constLedger(): Ledger { return new Ledger(0, \"USD\", new Map(), [])}\n\n    state = {\n        ledgerDetail: this.constLedger(),\n        already_called: false\n    }\n\n    async getData() {\n        try {\n            let response = await axios.get(\"http://localhost:8080/invoices\");\n            const ledgerJson = response.data\n            const data = ledgerJson.ledgerDetail.map((value: any) => {\n                return new LedgerDetail(\n                    value.amount,\n                    value.currency,\n                    value.is_credit,\n                    value.description,\n                    value.created_at\n                );\n            });\n            const ledgerInfo = new Ledger(\n                ledgerJson.totalAmount,\n                ledgerJson.totalAmountInCurrency,\n                ledgerJson.currencyRates,\n                data\n            )\n            this.setState({\n                ledgerDetail: ledgerInfo\n            })\n        } catch (error) {\n            alert(\"We couldn't load the invoices. Please \")\n            console.error(error)\n            this.setState({\n                invoices: []\n            });\n        }\n    }\n\n    componentDidMount() {\n        if (!this.state.already_called) {\n            this.getData().then(r =>\n                this.setState(\n                    {\n                        already_called: true\n                    }\n                )\n            );\n        }\n    }\n\n    getTotalAmount(): String {\n        return \"\" + this.state.ledgerDetail.totalAmountInCurrency + '$' +  this.state.ledgerDetail.totalAmount\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"simple-header\">My Ledger</p>\n                <p className=\"simple-entries\">Total Amount: {this.getTotalAmount()}</p>\n                <p className=\"simple-entries\">Total Entries: {this.state.ledgerDetail.ledgerDetails.length}</p>\n                <Button variant=\"contained\" href=\"http://localhost:8080/invoices/download\">Download CSV</Button>\n                <LedgerDetailTable ledgerDetails={this.state.ledgerDetail.ledgerDetails}></LedgerDetailTable>\n            </div>\n        );\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}